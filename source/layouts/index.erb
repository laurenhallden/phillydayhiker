<!doctype html>
<%= partial '/partials/head' %>
<body>

<div id='map' class="full-height"></div>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>

  <!-- mapbox gl js map -->
  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoibGF1cmVuaGFsbGRlbiIsImEiOiJjaWtvMXQzMnIwdXFwdHpqN21hMG84MGMxIn0.bMeEalyqwCOvDs_a8AeETw';
    var map = new mapboxgl.Map({
        container: 'map', // container id
        style: 'mapbox://styles/laurenhallden/civxwk4jt006g2klkep3qszns', //stylesheet location
        center: [-75.163, 39.976], // starting position
        zoom: 9 // starting zoom
    });

// Geolocation: set some options
  var options = {
    enableHighAccuracy: true,
    timeout: 10000, // wait 10 seconds before giving up
    maximumAge: 0
  };

  // Geolocation: add layer and styles for a single point
  map.on('load', function () {
    map.addSource('single-point', {
      "type": "geojson",
      "data": {
        "type": "FeatureCollection",
        "features": []
      }
    });

    map.addLayer({
      "id": "point",
      "source": "single-point",
      "type": "circle",
      "paint": {
        "circle-radius": 6,
        "circle-color": "#0388bb"
      }
    });

    // Geolocation: set success and error states for geolocation attempt
    function errorCallback() {
      alert("We were unable to find you. Does your browser accept location services?");
    }
     
    function successCallback(pos) {
      stopProgress();
      var userLocation = {
          type: 'Point',
          coordinates: [pos.coords.longitude, pos.coords.latitude]
        };
      // set point at user location
      map.getSource('single-point').setData(userLocation);
      // fly map to user location
      map.flyTo({center:[pos.coords.longitude, pos.coords.latitude], zoom:[14]});
    }

    // Geolocation: run it
    $('#geolocate').click(function() {
       if (navigator && navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(successCallback, errorCallback);
          locatingProgress();
        } else {
          alert('Geolocation is not supported');
        }
    });

    // Popups: change popup cursors to pointer
    map.on('mousemove', function (f) {
      var pointers = map.queryRenderedFeatures(f.point, { layers: ['zoomed-features','places'] });
      map.getCanvas().style.cursor = (pointers.length) ? 'pointer' : '';
    });
  });

  // When a click event occurs near a BLUE location marker, open a popup at the location of
  // the feature, with description HTML from its properties.
  map.on('click', function (e) {
    var features = map.queryRenderedFeatures(e.point, { layers: ['places'] });

    if (!features.length) {
      return;
    } else {
      // Get coordinates from the symbol and center the map on those coordinates
      map.flyTo({center: features[0].geometry.coordinates});
    }

    var feature = features[0];

    // Populate the popup and set its coordinates
    // based on the feature found.
    var popup = new mapboxgl.Popup()
      .setLngLat(feature.geometry.coordinates)
      .setHTML("<a href='" + feature.properties.link +"'>" + feature.properties.title + "</a>")
      .addTo(map);
  });

  // When a click event occurs near a YELLOW feature marker, open a popup at the location of
  // the feature, with description HTML from its properties.
  map.on('click', function (f) {
    var highlights = map.queryRenderedFeatures(f.point, { layers: ['zoomed-features'] });

    if (!highlights.length) {
      return;
    } else {
      // Get coordinates from the symbol and center the map on those coordinates
      var oldcoords = highlights[0].geometry.coordinates;
      var oldlat = oldcoords[0];
      var oldlong = oldcoords[1];
      var newlong = (oldlong + 0.00450);
      map.flyTo({center:[oldlat, newlong]});
    }

    var highlight = highlights[0];

    // Populate the popup and set its coordinates
    // based on the feature found.
    var popup = new mapboxgl.Popup()
      .setLngLat(highlight.geometry.coordinates)
      .setHTML(highlight.properties.title + '<br/>' + highlight.properties.description)
      .addTo(map);
  });

  // Add zoom and rotation controls to the map.
  var nav = new mapboxgl.NavigationControl();
  map.addControl(nav, 'top-left');

  var mapCanvas = $('.mapboxgl-canvas')[0];
  var mapDiv = document.getElementById('map');

  // Add our custom control buttons for Geolocate, Fullscreen & Satellite
  $( ".mapboxgl-ctrl-top-left" ).append( "<div class='mapboxgl-ctrl mapboxgl-ctrl-group'><button class='mapboxgl-ctrl-icon mapboxgl-ctrl-icon-reset' id='reset' type='button' aria-label='Reset'></button><button class='mapboxgl-ctrl-icon mapboxgl-ctrl-icon-fullscreen' id='full-screen' type='button' aria-label='Fullscreen'></button><button class='mapboxgl-ctrl-icon mapboxgl-ctrl-icon-satellite' id='satellite' type='button' aria-label='Satellite'></button></div><div class='mapboxgl-ctrl mapboxgl-ctrl-group'><button class='mapboxgl-ctrl-icon mapboxgl-ctrl-icon-geolocate' id='geolocate' type='button' aria-label='Geolocate'></button></div>" );

  // Reset button: 
  $('#reset').click(function() {
    map.flyTo({center:[-75.163, 39.976], zoom:[9]});
  });

</script>
<script src="/js/fullscreen.js"></script>
<script src="/js/satellite.js"></script>
<%= partial '/partials/js' %>

</body>
</html>